<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABc
        EQAAAk1TRnQBSQFMAgEBBgEAAQgBAAEIAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEABf8B9gGaAXQBmQf/
        B3QBcwF0AhwB6wFLAXQBSwFEIAAC/wH2AfMBdAF5AVgBKwF5A/8C9gL/AXMCdAFLAUoBRAIjAUQBSgGT
        Am4BSwEHAfggAAH/AfYBvQF6AVkBUgFZASUBegGZAXMBSgEqAXQB9AH2AnMBdAJzAe0BbgHqASIBCwFt
        AUoBdAJKAeogAAH/AfYBwwFSAXoBeQF6AVgBUgFFBHoBWAG9AXQBkwEHARoBUQFLAesC7QHrAUMBRAF0
        ASsBKgFEIAAB/wH1AXoBWAFZA1IBWAFMAnkCWAF6AXkBcwFSAXMBmgJSAUwBUgHrAe0B+AHqAlIBMgHr
        IAAB9gF5AVgBUwErAVgBUgF6AVgBUgFYAXoBWQF6AeUBegHrAnkBegJSAXoCUgHtAesBIgEUAQMBMgEU
        IAAB/wFYAX4BWAHlAX4BeQFSAV0CWAFZAXoB5QF6AfYBRAFSAnoBWAErAlIBUQHrAUMBSQEoARUBIgER
        IAAB9gF6AVkBeQJTAXkBegFZAXoBWQN6AeUB/wFEAW4BegFYAXoCUgFYAUsBKQETASkBSgEUAUMBIiAA
        Af8BWQF6AVkBWAF6AVgCWQHlAXoB5QJ6Av8BbQHrAXkBbgFZAlIBegFLAQMBSgIpARIBKAEiIAAB/wF6
        AVkBegFZAXkB5QFYAnoC5QGaA/8B6wHqARIB6wGaAXoBSwFKAUkESgFPASgBIiAAAf8BwwF6AlkCWAF6
        AV4D5QGgA/8BkAETARQBFQGfAXoBSgEVASkBSgEDASkCSgEoASIgAAL/AVkBegFZAnoBWQGaAVgB5QL2
        A/8BrgESARQCFQFDARMBFAZKAUkBESAAA/8BWQHlAaABmgF+Af8B9gb/AbQBrgGQARMBFAFDARQBcQFK
        AgMBSgEDAUoBFAFmIAAC/wGfAVgBUQF6AaAJ/wK0Aa4BkAFsARUBQwFsAnIBKQIDAVABEwGLIAAC/wH2
        AZkBnwv/ArsBrgGRAUkBbAEVAUoBEgEDAVABSgFtAZACbCAAEP8BuwGRAa4BkQFsARMBFAETAmwBEgFJ
        AYYBbAGLAWwgAAGQAhMBQwERAUMBFQFxAa4BqQFtARABFQFmAZABkgEPAQ0BiwEGAWwBEQFrAUgBSQFw
        AWwBcAFsAQ8BDQFIAeoBQwEOARABSQHrAWgBjQETAXMBQwEUAUMBSgHsAfgBeAEbAVMBdAG9AcMBUgEq
        ASgBSgE3ARoBNwFuAQ4BNQFsAUkBEQEVAQ8BFQFxAZABrwGOAYgBjQETAeoBcQG1AmwBBgFsAWsBEQE+
        AR4BRQFsAXABSQJsAQ0BbAENAUgBDgFJARIBbgFoAUUBRAFKARMBFQISAWgBFQGgAQgB4wF0ATIBUgIy
        ARwB+AGZATcBmgE4ARoBUAERAZABbAEUAUMBkAGRAa4BsAHXAY4BtAFDAZABSQFmAWwBSAGLAUgBbAIR
        AT4BPwHpAXABZgNsAUgBDgEoAUkBbAGRAWgBYgE+ARQBZwE+AWgBbgKCARIBCAEbARcB9AF0ATIBegFZ
        AXkB8wFzAUoBMgJ6AUMBDwFwAZABbAKuAbABtgGwAdgB1wG3AUUBZgJDAQYBiwMGAWwBRAEOAQEB6QIB
        AWsCSAFrAUMBSQJxAeoBggFiAUUBYQE+AmgBjgGwAbYB8gEiAZkCUgEsATIBegFZASMBeQGfASMBUwEa
        AVkBKAEQAWYBtQGCAa4BqQFoBNEB1wEFAUMB6gE+AosCawHqAekBCwFnAREBDgHpAQEBSQFIAmwBcgEo
        AXIBnQGCAY0CiAG2AWkCiAFvAe0BBwH4AW4BQwG9AXQBGwEjATgBUwF5AQ8BFAFuAXUBWQF6AZ8BDwEU
        AdYBbwGCAdEBtgGwAdEB2AHRAa8BjAEQAWcBPgFsAkkBBgELAkABPwFiAmkBPgFDAWsBEAFsAXIBKAEU
        AWgBggGNAWgBiAHXAoQBiAFoAZMBsAEHAhIBfQFXAXQBnwFYAXkBHAF5AREB6wG9ATIBwwF5ARAB6gHW
        AbUB1wHWAdcB2AHXAa8BZwFsARMBbAEVAWcBbAFJAWsBbAEMAREBHgERAT4BEAFAAQEBEQENAQ4BDQEU
        AUkBQwGNAWgBRQGCAo4DiAFFAd0BtwHeAkQBeQHlAVgBKgEwAZkB8wF5AkQBDwFKARQBAwEQARMBsALR
        AbAB2AGwAa8BqQEVAWwBQwEQAUgBEQJsAUgBZwHpAQsBRAFFAT4BHgFAAQEBDwENAQ4BDwFxAQ8BFQGN
        AWkBaAFFAY4BaQEWAbEBkgGOAZMBGQHeAuoBmQEbAXkCWAJ5AUQBjQELAS8CUAEoAhABjQGwBNEBjQEU
        AUMBbAJDAUgBEAFrAWwBiwGRAekBHgEQAUQBCwEBAukCDQIOAUMB6gGNAogBaAFpAbABjgG2AQcBtwHY
        AUMB7AFtAWcB6gFYAQMBeQEbARoBnwFQAesB7AFKAVIDTwIQAUMB1wGvAoIB9wFEAW0B+AFnAT8CZwFm
        AREBEAJwAT8BAQE/AWoBPwEBAekBSAFrAQ8CDgESAY4BsAGIAbABtwHYAo8B0gG2AQcB8QHrAa4BFQHq
        AZkBeAFYAX4BeQHlATABKQFEAeoBkwEQAXoBEwE+AhEBQwHtAa8BzwERAUMBPgGDAY4BgwJiAQUBZgEN
        ARABkAFIARABAQHpAT8BQAEBAUYBiwJsAg4B6wHSAY4B2ALSAdgB5wHSAdgBlAHxAb0B3QG9ARUBbgEb
        ATsBWAGfASkB5QJXASMBEQFuAVkBUwHDARcBEQH4AW0B9wESAUMBDgEUAWIBYwGDAWgBZwGDAWIBEwEP
        AUgBiwFrARABRAEPAUAB6QEBAXACiwFsAQ0BDgG2AY8BsAGIARYB5wGSAe0BtwHYAewBEgHuAd4B9AGR
        ARQBRAFzAZ8BbwFQARsBnwFRAXUB4wF6AVkBdQFZAQ4BEgEHAvcB+AERAQ8BbQGvAYQBiAHrAfgBbAHq
        AUgBbAFJAWwBawENAmwBDwEVAWYBSQKLAZABbAFIAecBqwGwAbcBjwF/AdIB6wG3Ad4BEgFsAd0B8QEH
        ARUBQwFGAUoBTAEiAVEBMAFYApQBdQJ6Ab0BegEBAfgB7gHvAfcB6gERARUBbQEJAewBggG2AewBbAFI
        AWYBEAFIAWwBSAFrAUgBbAEPAe0BEwRsAUkBbAHnAasB0gHeAecC0gH4ARwB3gESAUgBbQFDAhABQwFv
        AUYBTwFQASkBnwF5AXQBlAF1AXoBWQF6AcMBTQETAbUBBwHuAeoBEQESAY0BcgGdAewBtgHqAUkBZgFw
        AmwBSAFrA2wBDwETAQ8BDQFsAUkBSAJsAQcC3gHYAd4BtwHtAXEBkwH3ARABDgFJAWwBcQFJASIBdQFN
        AlIBSgF5AVEBvQHjAVIBHwF5AcMCTQERARIBvAG7AUMBSQFtAY0B6gHtAZIBEwFyAUkBkAGRAUgBEAFs
        ARABbAEQAWwBDwEOAQ8BFQFIAmwBDwENAZ0BGgHYAQABvQFxAUMBbQG9AewBQwFJAWYBbAGuAZ0CSwER
        AXkBUgFLATcB5QGfAaABFgEXAZQBRgErAU0BQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEB
        FgAD//8AAgAL
</value>
  </data>
</root>